c
processedString
c
processed_string_buffer
exit
c
processed_string_buffer
processed_string_buffer << field + " "
processed_string_buffer + field + " "
processed_string_buffer
index == (fields.size - 1)
!(keyword.nil? || keyword.empty?)
field
fiels
keyword = keywords[field]
quotes%2 == 0 &&
           single_quote%2 == 0 &&
           block_comment_start == block_comment_end
quotes += field.count("\"")
        single_quote += field.count("\'")
        block_comment_start += field.count("/*")
        block_comment_end += field.count("*/")
index
field
c
processed_string_buffer
exit
c
line
c
line
c
line
c
byte_string.split("\n")
byte_string.split('\n')
line
c
block_comment_start
keywords_found
class_names
c
processed_string_buffer
processed_string_buffer.dup
c
processedString
bytes
"a" + "bb"
" tt".strip
script_path
byte_string
c
@keyword
c
@keyword
c
@keyword
c
File.read("")
File.read(")
File.read
File.exists?
File.exisits?
File.exisits
ARGV
c
ARGF
ARGVF
ARGV
ARG
